// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: ListCustomerAddresses.sql

package eshop

import (
	"context"

	"github.com/google/uuid"
)

const listCustomerAddresses = `-- name: ListCustomerAddresses :many
SELECT
    ca.id,
    ca.customer_id,
    ca.location_name,
    ca.address,
    ca.created_at,
    ca.updated_at
FROM
    customer_address AS ca
JOIN
    customer AS c on c.id = ca.customer_id
WHERE
    c.id = $1
`

func (q *Queries) ListCustomerAddresses(ctx context.Context, id uuid.UUID) ([]CustomerAddress, error) {
	rows, err := q.db.QueryContext(ctx, listCustomerAddresses, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []CustomerAddress
	for rows.Next() {
		var i CustomerAddress
		if err := rows.Scan(
			&i.ID,
			&i.CustomerID,
			&i.LocationName,
			&i.Address,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
