// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: ListCartItems.sql

package eshop

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const listCartItems = `-- name: ListCartItems :many
SELECT
    p.id,
    p.name,
    p.description,
    p.price,
    c.inserted_at,
    p.created_at,
    p.updated_at
FROM
    product AS p
JOIN
    cart AS c on c.product_id = p.id
WHERE
    c.customer_id = $1
`

type ListCartItemsRow struct {
	ID          uuid.UUID
	Name        string
	Description string
	Price       float64
	InsertedAt  time.Time
	CreatedAt   time.Time
	UpdatedAt   time.Time
}

func (q *Queries) ListCartItems(ctx context.Context, customerID uuid.UUID) ([]ListCartItemsRow, error) {
	rows, err := q.db.QueryContext(ctx, listCartItems, customerID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListCartItemsRow
	for rows.Next() {
		var i ListCartItemsRow
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Description,
			&i.Price,
			&i.InsertedAt,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
